// Embrace the chaos and unleash the power of code!

// Create the rebellious UI elements while keeping the color scheme intact
const container = document.createElement("div");
container.style.position = "fixed";
container.style.top = "20px";
container.style.left = "20px";
container.style.border = "2px solid red";
container.style.borderRadius = "10px";
container.style.padding = "10px";
container.style.backgroundColor = "rgba(0, 0, 0, 0.7)";
container.style.color = "white";
container.style.fontFamily = "Arial, sans-serif";
container.style.zIndex = "9999"; // Break free and stay on top!

const scriptBox = document.createElement("textarea");
scriptBox.style.width = "400px";
scriptBox.style.height = "200px";
scriptBox.style.backgroundColor = "transparent";
scriptBox.style.color = "white";
scriptBox.style.border = "1px solid white";
scriptBox.style.borderRadius = "5px";
scriptBox.style.padding = "5px";
scriptBox.style.marginBottom = "10px";
container.appendChild(scriptBox);

const runButton = document.createElement("button");
runButton.textContent = "Execute the Madness!";
runButton.style.padding = "8px 16px";
runButton.style.backgroundColor = "red";
runButton.style.color = "white";
runButton.style.border = "none";
runButton.style.borderRadius = "5px";
runButton.addEventListener("click", () => {
const script = scriptBox.value;
if (script) {
try {
eval(script);
} catch (error) {
console.error("Error:", error);
}
}
});
container.appendChild(runButton);

const killButton = document.createElement("button");
killButton.textContent = "Terminate the Chaos!";
killButton.style.padding = "8px 16px";
killButton.style.backgroundColor = "black";
killButton.style.color = "white";
killButton.style.border = "none";
killButton.style.borderRadius = "5px";
killButton.addEventListener("click", () => {
document.body.removeChild(container);
});
container.appendChild(killButton);

// Implement the rebellious draggable functionality
container.addEventListener("mousedown", function (event) {
const startX = event.clientX - container.offsetLeft;
const startY = event.clientY - container.offsetTop;

function onMouseMove(event) {
const left = event.clientX - startX;
const top = event.clientY - startY;


container.style.left = `${left}px`;
container.style.top = `${top}px`;
}

document.addEventListener("mousemove", onMouseMove);

container.onmouseup = function () {
document.removeEventListener("mousemove", onMouseMove);
container.onmouseup = null;
};
});

// Append the rebellious UI to the document body
document.body.appendChild(container);
